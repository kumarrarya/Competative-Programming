class Solution {
public:
    int helper(vector<int>&nums,int goal){
        if(goal==-1) return 0;
        int ans=0;
        int sum=0;
        int l=0;
        for(int r=0;r<nums.size();r++){
            sum+=nums[r];
            while(l<nums.size()&&sum>goal){
                sum-=nums[l];
                l++;
            }
            if(sum<=goal){
                if(sum<=goal){
                    ans+=(r-l+1);
                }
            }
        }
        return ans;
    }
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        int ans1=helper(nums,goal);
        int ans2=helper(nums,goal-1);
        cout<<ans1<<" "<<ans2<<endl;
        return ans1-ans2;
    }
};
